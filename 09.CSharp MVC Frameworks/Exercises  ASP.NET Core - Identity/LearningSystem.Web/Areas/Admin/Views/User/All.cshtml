@model IEnumerable<UserRoleInfo>
@{
    this.ViewData["Title"] = "Admin User management";
}
<h1>Test</h1>
<table class="table table-striped table-bordered table-responsive table-hover">
    <tr>
        <th>Email</th>
        <th>Username</th>
        <th>Roles</th>
        <th>Role Actions</th>
    </tr>
    @foreach (var user in Model)
    {
        <tr>
            <td>
                @user.Email
            </td>
            <td>
                @user.Username
            </td>
            <td>
                @if (user.Roles.Any())
                {
                    <ul>
                        @foreach (var role in user.Roles.OrderBy(r => r))
                        {
                            <li>@role</li>
                        }
                    </ul>
                }
            </td>
            <td>
                @foreach (var availableRole in GlobalConstants.AvailableRoles.OrderBy(r => r))
                {
                    @if (!user.Roles.Contains(availableRole))
                    {
                        <form method="post" asp-area="Admin" asp-action="AddRole" asp-controller="User">
                            <input name="userId" type="hidden" value="@user.Id" />
                            <input name="role" type="hidden" value="@availableRole" />
                            <button type="submit" class="btn btn-success btn-xs">Make @availableRole</button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-area="Admin" asp-action="RemoveRole" asp-controller="User">
                            <input name="userId" type="hidden" value="@user.Id" />
                            <input name="role" type="hidden" value="@availableRole" />
                            <button type="submit" class="btn btn-danger btn-xs">Unmake @availableRole</button>
                        </form>
                    }

                }
            </td>
        </tr>
    }
</table>